<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.mypofol.mapper.BoardMapper">

	<!-- SELECT QUERY -->
	<select id="readList" resultType="net.mypofol.model.BoardVO">	 
	<![CDATA[
	 	select * from t_board where bno > 0
	 ]]>
	</select>

	<select id="readListWithPaging"
		resultType="net.mypofol.model.BoardVO">
		<![CDATA[
			select bno, title, content, writer, regdate, updatedate, replycnt from
			(select /*+INDEX_DESC(t_board pk_board)*/ 
			rownum rn, bno, title, content, writer, regdate, updatedate, replycnt from t_board 
			where
		]]>
			<include refid="searching"/>
		<![CDATA[
			rownum <= #{pageNum} * #{amount})
			where rn > (#{pageNum} - 1) * #{amount}		
			]]>		
	</select>

	<select id="read" resultType="net.mypofol.model.BoardVO">
		select * from t_board where bno = #{bno}
	</select>
	
	<select id="readTotalCount" resultType="int">
		select count(*) from t_board where
		<include refid="searching"/> 
		<![CDATA[	bno > 0		]]>
	</select>

	<!-- INSERT QUERY -->
	<insert id="insert">
		insert into t_board (bno, title, content, writer)
		values (seq_board.nextval, #{title}, #{content}, #{writer})
	</insert>

	<insert id="insertBySelectKey">
		<selectKey keyProperty="bno" order="BEFORE"
			resultType="long">
			select seq_board.nextval from dual
		</selectKey>
		insert into t_board (bno, title, content, writer)
		values (#{bno}, #{title}, #{content}, #{writer})
	</insert>

	<!-- UPDATE QUERY -->
	<update id="update">
		update t_board set title = #{title},
		content = #{content},
		writer = #{writer},
		updateDate = sysdate
		where bno = #{bno}
	</update>
	
	<update id="updateReplyCnt">
		update t_board set replycnt = replycnt + #{amount} where bno = #{bno}
	</update>

	<!-- DELETE QUERY -->
	<delete id="delete">
		delete from t_board where bno = #{bno}
	</delete>
	
	<!-- <sql> -->
	<sql id="searching">
		<trim prefix="(" suffix=") AND " prefixOverrides="OR">
			<foreach item="type" collection="typeArr">
				<trim prefix="OR">
					<choose>
						<when test="type == 'T'.toString()">
							title like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'C'.toString()">
							content like '%'||#{keyword}||'%'
						</when>
						<when test="type == 'W'.toString()">
							writer like '%'||#{keyword}||'%'
						</when>
					</choose>
				</trim>
			</foreach>
		</trim>
	</sql>

</mapper>    